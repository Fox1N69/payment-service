// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"github.com/Fox1N69/iq-testtask/internal/config"
	"github.com/Fox1N69/iq-testtask/internal/delivery/http/handler"
	"github.com/Fox1N69/iq-testtask/internal/domain/service"
	"github.com/Fox1N69/iq-testtask/internal/repository"
	"github.com/Fox1N69/iq-testtask/storage/postgres"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeServer() (*Server, error) {
	configConfig, err := config.ProvideConfig()
	if err != nil {
		return nil, err
	}
	pool, err := postgres.NewPostgresDB(configConfig)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(pool)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(userService)
	transactionRepository := repository.NewTransactionRepository(pool)
	transactionService := service.NewTransactionService(transactionRepository)
	transactionHandler := handler.NewTransactionHandler(transactionService)
	server, err := New(configConfig, userHandler, transactionHandler)
	if err != nil {
		return nil, err
	}
	return server, nil
}

// wire.go:

var ProviderSet = wire.NewSet(config.ProviderSet, handler.ProviderSet, New)
